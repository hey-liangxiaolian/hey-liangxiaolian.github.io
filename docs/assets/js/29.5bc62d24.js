(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{383:function(v,_,p){"use strict";p.r(_);var n=p(42),t=Object(n.a)({},(function(){var v=this,_=v.$createElement,p=v._self._c||_;return p("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[p("p",[v._v("解决跨域？")]),v._v(" "),p("p",[v._v("跨域，除了JSONP，nginx反向代理，php更改header，还有哪些？Php更改的header的什么？")]),v._v(" "),p("p",[v._v("还有CORS")]),v._v(" "),p("p",[v._v("JSONP只支持get，安全性隐患（废弃，一般不用）")]),v._v(" "),p("p",[v._v("Nginx 需要后端额外配置")]),v._v(" "),p("p",[v._v("Jsonp")]),v._v(" "),p("p",[v._v("最早的解决方案，利用script标签可以跨域的原理实现。")]),v._v(" "),p("p",[v._v("限制：")]),v._v(" "),p("ul",[p("li",[v._v("需要服务的支持")]),v._v(" "),p("li",[v._v("只能发起GET请求")]),v._v(" "),p("li",[v._v("Jsonp原理与实践")])]),v._v(" "),p("p",[v._v("nginx反向代理")]),v._v(" "),p("p",[v._v("思路是：利用nginx反向代理把跨域为不跨域，支持各种请求方式")]),v._v(" "),p("p",[v._v("缺点：需要在nginx进行额外配置，语义不清晰")]),v._v(" "),p("p",[v._v("CORS")]),v._v(" "),p("p",[v._v("规范化的跨域请求解决方案，安全可靠。")]),v._v(" "),p("p",[v._v("优势：")]),v._v(" "),p("ul",[p("li",[v._v("在服务端进行控制是否允许跨域，可自定义规则")]),v._v(" "),p("li",[v._v("支持各种请求方式")])]),v._v(" "),p("p",[v._v("缺点：")]),v._v(" "),p("ul",[p("li",[v._v("会产生额外的请求")]),v._v(" "),p("li",[v._v("我们这里会采用cors的跨域方案。")])]),v._v(" "),p("p",[v._v("表单请求不存在跨域问题(get, post)")])])}),[],!1,null,null,null);_.default=t.exports}}]);
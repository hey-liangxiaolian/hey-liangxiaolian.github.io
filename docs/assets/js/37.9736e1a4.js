(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{395:function(t,e,v){"use strict";v.r(e);var a=v(42),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h4",{attrs:{id:"vuex"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[t._v("#")]),t._v(" Vuex")]),t._v(" "),v("p",[t._v("（https://vuex.vuejs.org/zh/）")]),t._v(" "),v("p",[t._v("Vuex 是一个专为 Vue.js 应用程序开发的"),v("strong",[t._v("状态管理模式")]),t._v("。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。Vuex 也集成到 Vue 的官方调试工具 "),v("a",{attrs:{href:"https://github.com/vuejs/vue-devtools",target:"_blank",rel:"noopener noreferrer"}},[t._v("devtools extension (opens new window)"),v("OutboundLink")],1),t._v("，提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能。")]),t._v(" "),v("h4",{attrs:{id:"vuex-有哪几种属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vuex-有哪几种属性"}},[t._v("#")]),t._v(" vuex 有哪几种属性？")]),t._v(" "),v("p",[t._v("分别是：state、getter、mutation、action、module")]),t._v(" "),v("ul",[v("li",[t._v("state 存放状态")]),t._v(" "),v("li",[t._v("mutations state成员操作")]),t._v(" "),v("li",[t._v("getters 加工state成员给外界")]),t._v(" "),v("li",[t._v("actions 异步操作")]),t._v(" "),v("li",[t._v("modules 模块化状态管理")])]),t._v(" "),v("h4",{attrs:{id:"vuex的工作流程-参考-https-www-jianshu-com-p-2e5973fe1223"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vuex的工作流程-参考-https-www-jianshu-com-p-2e5973fe1223"}},[t._v("#")]),t._v(" Vuex的工作流程（参考：https://www.jianshu.com/p/2e5973fe1223）")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/16550832-20d0ad3c60a99111.png",alt:""}})]),t._v(" "),v("p",[t._v("首先，"),v("code",[t._v("Vue")]),t._v("组件如果调用某个"),v("code",[t._v("VueX")]),t._v("的方法过程中需要向后端请求时或者说出现异步操作时，需要"),v("code",[t._v("dispatch")]),t._v(" VueX中"),v("code",[t._v("actions")]),t._v("的方法，以保证数据的同步。可以说，"),v("code",[t._v("action")]),t._v("的存在就是为了让"),v("code",[t._v("mutations")]),t._v("中的方法能在异步操作中起作用。")]),t._v(" "),v("p",[t._v("如果没有异步操作，那么我们就可以直接在组件内提交状态中的"),v("code",[t._v("Mutations")]),t._v("中自己编写的方法来达成对"),v("code",[t._v("state")]),t._v("成员的操作。注意，不建议在组件中直接对"),v("code",[t._v("state")]),t._v("中的成员进行操作，这是因为直接修改(例如："),v("code",[t._v("this.$store.state.name = 'hello'")]),t._v(")的话不能被"),v("code",[t._v("VueDevtools")]),t._v("所监控到。")]),t._v(" "),v("p",[t._v("最后被修改后的state成员会被渲染到组件的原位置当中去。")]),t._v(" "),v("h4",{attrs:{id:"vuex-的-store-特性是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vuex-的-store-特性是什么"}},[t._v("#")]),t._v(" vuex 的 store 特性是什么？")]),t._v(" "),v("p",[t._v("vuex 就是一个仓库，仓库里放了很多对象。其中 state 就是数据源存放地，对应于一般 vue 对象里面的 data"),v("br"),t._v("\nstate 里面存放的数据是响应式的，vue 组件从 store 读取数据，若是 store 中的数据发生改变，依赖这组数据的组件也会发生更新"),v("br"),t._v("\n它通过 mapState 把全局的 state 和 getters 映射到当前组件的 computed 计算属性")]),t._v(" "),v("h4",{attrs:{id:"vuex-的-getter-特性是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vuex-的-getter-特性是什么"}},[t._v("#")]),t._v(" vuex 的 getter 特性是什么？")]),t._v(" "),v("p",[t._v("getter 可以对 state 进行计算操作，他就是 store 的计算属性"),v("br"),t._v("\n虽然在组件内也可以做计算属性，但是 getters 可以在多组件之间复用"),v("br"),t._v("\n如果一个状态只在一个组件内使用，是可以不用 getters")]),t._v(" "),v("h4",{attrs:{id:"vuex-的-mutation-特性是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vuex-的-mutation-特性是什么"}},[t._v("#")]),t._v(" vuex 的 mutation 特性是什么？")]),t._v(" "),v("p",[v("code",[t._v("mutations")]),t._v("是操作"),v("code",[t._v("state")]),t._v("数据的方法的集合，比如对该数据的修改、增加、删除等等。")]),t._v(" "),v("p",[t._v("action 类似于 mutation，不同在于：action 提交的是 mutation，而不是直接变更状态"),v("br"),t._v("\naction 可以包含任意异步操作")])])}),[],!1,null,null,null);e.default=s.exports}}]);